{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\Hotel Management System\\\\Hotel_Management_System-React-TS\\\\src\\\\pages\\\\dashboard\\\\dashboard.tsx\",\n  _s = $RefreshSig$();\n// const Dashboard: React.FC = () => (\n//     <div>\n//         <EntityList />\n//     </div>\n// );\n//\n// export default Dashboard;\nimport React, { useState } from \"react\";\nimport { Grid, GridItem } from '@chakra-ui/react';\nimport { Header } from \"../../components/header/header\";\nimport RoleForm from \"../../components/Forms/RoleForm\";\nimport { DataCounter } from \"../../components/dataCounter/dataCounter\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Dashboard = () => {\n  _s();\n  const [selectedRoleId, setSelectedRoleId] = useState(null);\n  const handleEditRole = roleId => {\n    setSelectedRoleId(roleId);\n  };\n  const [data, setData] = useState(null);\n  const getEntities = async () => {\n    const response = await axios.get(\"http://localhost:3300/entitiesCount\");\n    try {\n      console.log(\"test\");\n      if (response.status === 200) {\n        setData(response.data);\n        console.log(\"teeeeeest\" + response.data);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    h: \"500px\",\n    templateColumns: '65% 35%',\n    gap: 4,\n    children: [/*#__PURE__*/_jsxDEV(GridItem, {\n      colSpan: 2,\n      children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n      rowSpan: 2,\n      bg: \"papayawhip\",\n      children: data && Object.entries(data).map((_ref, index) => {\n        let [key, value] = _ref;\n        const {\n          count,\n          name\n        } = value;\n        return /*#__PURE__*/_jsxDEV(DataCounter, {\n          count: count,\n          name: name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n      rowSpan: 2,\n      bg: \"papayawhip\",\n      children: /*#__PURE__*/_jsxDEV(RoleForm, {\n        selectedRoleId: selectedRoleId,\n        onSave: () => setSelectedRoleId(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"IoAEa3HmA1g+rxNCFdKFRQ/Mp7Y=\");\n_c = Dashboard;\n{/*{data &&*/}\n{/*    Object.entries(data).map(([key, value], index) => {*/}\n{/*        const { count, name } = value as { count: number, name: string };*/}\n{/*        return (*/}\n{/*            <div key={index} className={\"counter-container\"}>*/}\n{/*                <Avatar name={count} />*/}\n{/*                <h3>{name}</h3>*/}\n{/*            </div>*/}\n{/*        );*/}\n{/*    })}*/}\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","Grid","GridItem","Header","RoleForm","DataCounter","axios","Dashboard","selectedRoleId","setSelectedRoleId","handleEditRole","roleId","data","setData","getEntities","response","get","console","log","status","error","Object","entries","map","index","key","value","count","name"],"sources":["C:/Users/DELL/Documents/Hotel Management System/Hotel_Management_System-React-TS/src/pages/dashboard/dashboard.tsx"],"sourcesContent":["\r\n// const Dashboard: React.FC = () => (\r\n//     <div>\r\n//         <EntityList />\r\n//     </div>\r\n// );\r\n//\r\n// export default Dashboard;\r\nimport React, { FC, ReactElement, useState} from \"react\";\r\nimport { Grid, GridItem } from '@chakra-ui/react'\r\n\r\nimport EntityList from \"../../components/roleArea/roleArea\";\r\n\r\nimport {Header} from \"../../components/header/header\";\r\nimport RoleForm from \"../../components/Forms/RoleForm\";\r\nimport {DataCounter} from \"../../components/dataCounter/dataCounter\";\r\nimport axios from \"axios\";\r\n\r\nexport const Dashboard: FC = (): ReactElement => {\r\n    const [selectedRoleId, setSelectedRoleId] = useState<string | null>(null);\r\n\r\n    const handleEditRole = (roleId: string) => {\r\n        setSelectedRoleId(roleId);\r\n    };\r\n\r\n    const [data, setData] = useState(null);\r\n\r\n    const getEntities= async () => {\r\n        const response = await axios.get(\"http://localhost:3300/entitiesCount\");\r\n        try {\r\n            console.log(\"test\");\r\n            if(response.status === 200){\r\n                setData(response.data);\r\n                console.log(\"teeeeeest\" + response.data);\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid\r\n            h='500px'\r\n            templateColumns={'65% 35%'}\r\n            gap={4}\r\n        >\r\n            <GridItem colSpan={2}>\r\n                <Header/>\r\n            </GridItem>\r\n            <GridItem rowSpan={2} bg='papayawhip'>\r\n                {data &&\r\n                    Object.entries(data).map(([key, value], index) => {\r\n                        const { count, name } = value as { count: number, name: string };\r\n                        return (\r\n                            <DataCounter key={index} count={count} name={name} />\r\n                        );\r\n                    })}\r\n            </GridItem>\r\n            <GridItem rowSpan={2} bg='papayawhip' >\r\n                <RoleForm selectedRoleId={selectedRoleId} onSave={() => setSelectedRoleId(null)}/>\r\n            </GridItem>\r\n\r\n        </Grid>\r\n\r\n    )\r\n};\r\n\r\n{/*{data &&*/}\r\n{/*    Object.entries(data).map(([key, value], index) => {*/}\r\n{/*        const { count, name } = value as { count: number, name: string };*/}\r\n{/*        return (*/}\r\n{/*            <div key={index} className={\"counter-container\"}>*/}\r\n{/*                <Avatar name={count} />*/}\r\n{/*                <h3>{name}</h3>*/}\r\n{/*            </div>*/}\r\n{/*        );*/}\r\n{/*    })}*/}\r\n\r\n"],"mappings":";;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAsBC,QAAQ,QAAO,OAAO;AACxD,SAASC,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AAIjD,SAAQC,MAAM,QAAO,gCAAgC;AACrD,OAAOC,QAAQ,MAAM,iCAAiC;AACtD,SAAQC,WAAW,QAAO,0CAA0C;AACpE,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,OAAO,MAAMC,SAAa,GAAG,MAAoB;EAAA;EAC7C,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAgB,IAAI,CAAC;EAEzE,MAAMU,cAAc,GAAIC,MAAc,IAAK;IACvCF,iBAAiB,CAACE,MAAM,CAAC;EAC7B,CAAC;EAED,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMc,WAAW,GAAE,YAAY;IAC3B,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,qCAAqC,CAAC;IACvE,IAAI;MACAC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACnB,IAAGH,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAC;QACvBN,OAAO,CAACE,QAAQ,CAACH,IAAI,CAAC;QACtBK,OAAO,CAACC,GAAG,CAAC,WAAW,GAAGH,QAAQ,CAACH,IAAI,CAAC;MAC5C;IACJ,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACZH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;IACxB;EACJ,CAAC;EAED,oBACI,QAAC,IAAI;IACD,CAAC,EAAC,OAAO;IACT,eAAe,EAAE,SAAU;IAC3B,GAAG,EAAE,CAAE;IAAA,wBAEP,QAAC,QAAQ;MAAC,OAAO,EAAE,CAAE;MAAA,uBACjB,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QACF,eACX,QAAC,QAAQ;MAAC,OAAO,EAAE,CAAE;MAAC,EAAE,EAAC,YAAY;MAAA,UAChCR,IAAI,IACDS,MAAM,CAACC,OAAO,CAACV,IAAI,CAAC,CAACW,GAAG,CAAC,OAAeC,KAAK,KAAK;QAAA,IAAxB,CAACC,GAAG,EAAEC,KAAK,CAAC;QAClC,MAAM;UAAEC,KAAK;UAAEC;QAAK,CAAC,GAAGF,KAAwC;QAChE,oBACI,QAAC,WAAW;UAAa,KAAK,EAAEC,KAAM;UAAC,IAAI,EAAEC;QAAK,GAAhCJ,KAAK;UAAA;UAAA;UAAA;QAAA,QAA8B;MAE7D,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACC,eACX,QAAC,QAAQ;MAAC,OAAO,EAAE,CAAE;MAAC,EAAE,EAAC,YAAY;MAAA,uBACjC,QAAC,QAAQ;QAAC,cAAc,EAAEhB,cAAe;QAAC,MAAM,EAAE,MAAMC,iBAAiB,CAAC,IAAI;MAAE;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QAC3E;EAAA;IAAA;IAAA;IAAA;EAAA,QAER;AAGf,CAAC;AAAC,GA/CWF,SAAa;AAAA,KAAbA,SAAa;AAiD1B,CAAC;AACD,CAAC;AACD,CAAC;AACD,CAAC;AACD,CAAC;AACD,CAAC;AACD,CAAC;AACD,CAAC;AACD,CAAC;AACD,CAAC;AAAY;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}