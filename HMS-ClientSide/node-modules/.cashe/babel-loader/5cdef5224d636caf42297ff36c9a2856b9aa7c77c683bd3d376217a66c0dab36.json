{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\Hotel Management System\\\\Hotel_Management_System-React-TS\\\\src\\\\pages\\\\Signin\\\\Signin.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./signin.style.css\";\nimport { Form, Formik } from \"formik\";\nimport { Grid, Heading, Stack, useToast } from \"@chakra-ui/react\";\nimport { InputControl, SubmitButton } from \"formik-chakra-ui\";\nimport { useSigninUserMutation } from \"../../store/api/authAPi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signin = () => {\n  _s();\n  // const dispatch = useAppDispatch();\n  // const [email, setEmail] = useState<string>();\n  const toast = useToast();\n  // const navigate = useNavigate();\n  // const [signinUser, { data, isLoading, error, isError, isSuccess }] =\n  //     useSigninUserMutation();\n  // console.log(data);\n\n  //\n\n  const [signinUser, {\n    data,\n    isLoading,\n    error\n  }] = useSigninUserMutation();\n  console.log(data);\n  console.log(error);\n  toast({\n    title: error.data.message,\n    status: \"error\",\n    duration: 5000\n  });\n  // if (isError) {\n  //     toast({\n  //         title: (error as any).data.message,\n  //         status: \"error\",\n  //         duration: 5000,\n  //     });\n  //     if ((error as any).data.message === \"User not Verified\") {\n  //         navigate(\"/send-verify-mail\", {\n  //             state: { email },\n  //         });\n  //     }\n  // }\n  // if (isSuccess) {\n  //     dispatch(setUser({ token: data.token, name: data.name }));\n  //     navigate(\"/\");\n  //     localStorage.setItem(\"token\", data.token);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    onSubmit: values => {\n      signinUser({\n        ...values\n      });\n      // console.log(values);\n      // setEmail(values.email);\n    },\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        h: \"100vh\",\n        placeItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          p: \"4\",\n          boxShadow: \"xl\",\n          borderRadius: \"md\",\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            color: \"teal\",\n            textAlign: \"center\",\n            fontSize: \"lg\",\n            fontWeight: \"semibold\",\n            children: \"Signin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(InputControl, {\n            name: \"email\",\n            label: \"Email\",\n            inputProps: {\n              type: \"email\",\n              placeholder: \"Enter Email...\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(InputControl, {\n            name: \"password\",\n            label: \"Password\",\n            inputProps: {\n              placeholder: \"Enter Password...\",\n              type: \"password\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n            isLoading: isLoading,\n            children: \"Signin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(Signin, \"NtpOdWiuEPFtCj65XuKm93u02CI=\", false, function () {\n  return [useToast, useSigninUserMutation];\n});\n_c = Signin;\nexport default Signin;\nvar _c;\n$RefreshReg$(_c, \"Signin\");","map":{"version":3,"names":["React","Form","Formik","Grid","Heading","Stack","useToast","InputControl","SubmitButton","useSigninUserMutation","Signin","toast","signinUser","data","isLoading","error","console","log","title","message","status","duration","email","password","values","type","placeholder"],"sources":["C:/Users/DELL/Documents/Hotel Management System/Hotel_Management_System-React-TS/src/pages/Signin/Signin.tsx"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport \"./signin.style.css\"\r\nimport {Form, Formik} from \"formik\";\r\nimport {Flex, Grid, Heading, Link, Stack, useToast} from \"@chakra-ui/react\";\r\nimport {InputControl, SubmitButton} from \"formik-chakra-ui\";\r\nimport {useSigninUserMutation} from \"../../store/api/authAPi\";\r\nimport {isError} from \"@tanstack/react-query\";\r\n\r\nconst Signin = () => {\r\n    // const dispatch = useAppDispatch();\r\n    // const [email, setEmail] = useState<string>();\r\n    const toast = useToast();\r\n    // const navigate = useNavigate();\r\n    // const [signinUser, { data, isLoading, error, isError, isSuccess }] =\r\n    //     useSigninUserMutation();\r\n    // console.log(data);\r\n\r\n    //\r\n\r\n    const [signinUser, {data, isLoading, error }] = useSigninUserMutation();\r\n    console.log(data);\r\n    console.log(error);\r\n    toast({title: (error as any).data.message , status: \"error\", duration: 5000 });\r\n    // if (isError) {\r\n    //     toast({\r\n    //         title: (error as any).data.message,\r\n    //         status: \"error\",\r\n    //         duration: 5000,\r\n    //     });\r\n    //     if ((error as any).data.message === \"User not Verified\") {\r\n    //         navigate(\"/send-verify-mail\", {\r\n    //             state: { email },\r\n    //         });\r\n    //     }\r\n    // }\r\n    // if (isSuccess) {\r\n    //     dispatch(setUser({ token: data.token, name: data.name }));\r\n    //     navigate(\"/\");\r\n    //     localStorage.setItem(\"token\", data.token);\r\n    // }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{ email: \"\", password: \"\" }}\r\n\r\n            onSubmit={(values) => {\r\n                signinUser({ ...values });\r\n                // console.log(values);\r\n                // setEmail(values.email);\r\n            }}\r\n        >\r\n            <Form>\r\n                <Grid h=\"100vh\" placeItems=\"center\">\r\n                    <Stack p=\"4\" boxShadow=\"xl\" borderRadius=\"md\">\r\n                        <Heading\r\n                            color=\"teal\"\r\n                            textAlign=\"center\"\r\n                            fontSize=\"lg\"\r\n                            fontWeight=\"semibold\"\r\n                        >\r\n                            Signin\r\n                        </Heading>\r\n                        <InputControl\r\n                            name=\"email\"\r\n                            label=\"Email\"\r\n                            inputProps={{\r\n                                type: \"email\",\r\n                                placeholder: \"Enter Email...\",\r\n                            }}\r\n                        />\r\n                        <InputControl\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            inputProps={{\r\n                                placeholder: \"Enter Password...\",\r\n                                type: \"password\",\r\n                            }}\r\n                        />\r\n                        {/*<Flex justify=\"flex-end\">*/}\r\n                        {/*    <Text as={Link} to=\"/forgot-password\" color=\"teal\">*/}\r\n                        {/*        Forgot Password*/}\r\n                        {/*    </Text>*/}\r\n                        {/*</Flex>*/}\r\n                        <SubmitButton isLoading={isLoading}>Signin</SubmitButton>\r\n                    </Stack>\r\n                </Grid>\r\n            </Form>\r\n        </Formik>\r\n    );\r\n};\r\nexport default Signin;"],"mappings":";;AAAA,OAAOA,KAAK,MAAkB,OAAO;AACrC,OAAO,oBAAoB;AAC3B,SAAQC,IAAI,EAAEC,MAAM,QAAO,QAAQ;AACnC,SAAcC,IAAI,EAAEC,OAAO,EAAQC,KAAK,EAAEC,QAAQ,QAAO,kBAAkB;AAC3E,SAAQC,YAAY,EAAEC,YAAY,QAAO,kBAAkB;AAC3D,SAAQC,qBAAqB,QAAO,yBAAyB;AAAC;AAG9D,MAAMC,MAAM,GAAG,MAAM;EAAA;EACjB;EACA;EACA,MAAMC,KAAK,GAAGL,QAAQ,EAAE;EACxB;EACA;EACA;EACA;;EAEA;;EAEA,MAAM,CAACM,UAAU,EAAE;IAACC,IAAI;IAAEC,SAAS;IAAEC;EAAM,CAAC,CAAC,GAAGN,qBAAqB,EAAE;EACvEO,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;EACjBG,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAClBJ,KAAK,CAAC;IAACO,KAAK,EAAGH,KAAK,CAASF,IAAI,CAACM,OAAO;IAAGC,MAAM,EAAE,OAAO;IAAEC,QAAQ,EAAE;EAAK,CAAC,CAAC;EAC9E;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACI,QAAC,MAAM;IACH,aAAa,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAG,CAAE;IAE3C,QAAQ,EAAGC,MAAM,IAAK;MAClBZ,UAAU,CAAC;QAAE,GAAGY;MAAO,CAAC,CAAC;MACzB;MACA;IACJ,CAAE;IAAA,uBAEF,QAAC,IAAI;MAAA,uBACD,QAAC,IAAI;QAAC,CAAC,EAAC,OAAO;QAAC,UAAU,EAAC,QAAQ;QAAA,uBAC/B,QAAC,KAAK;UAAC,CAAC,EAAC,GAAG;UAAC,SAAS,EAAC,IAAI;UAAC,YAAY,EAAC,IAAI;UAAA,wBACzC,QAAC,OAAO;YACJ,KAAK,EAAC,MAAM;YACZ,SAAS,EAAC,QAAQ;YAClB,QAAQ,EAAC,IAAI;YACb,UAAU,EAAC,UAAU;YAAA,UACxB;UAED;YAAA;YAAA;YAAA;UAAA,QAAU,eACV,QAAC,YAAY;YACT,IAAI,EAAC,OAAO;YACZ,KAAK,EAAC,OAAO;YACb,UAAU,EAAE;cACRC,IAAI,EAAE,OAAO;cACbC,WAAW,EAAE;YACjB;UAAE;YAAA;YAAA;YAAA;UAAA,QACJ,eACF,QAAC,YAAY;YACT,IAAI,EAAC,UAAU;YACf,KAAK,EAAC,UAAU;YAChB,UAAU,EAAE;cACRA,WAAW,EAAE,mBAAmB;cAChCD,IAAI,EAAE;YACV;UAAE;YAAA;YAAA;YAAA;UAAA,QACJ,eAMF,QAAC,YAAY;YAAC,SAAS,EAAEX,SAAU;YAAA,UAAC;UAAM;YAAA;YAAA;YAAA;UAAA,QAAe;QAAA;UAAA;UAAA;UAAA;QAAA;MACrD;QAAA;QAAA;QAAA;MAAA;IACL;MAAA;MAAA;MAAA;IAAA;EACJ;IAAA;IAAA;IAAA;EAAA,QACF;AAEjB,CAAC;AAAC,GAjFIJ,MAAM;EAAA,QAGMJ,QAAQ,EAQ0BG,qBAAqB;AAAA;AAAA,KAXnEC,MAAM;AAkFZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}