{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\Hotel Management System\\\\Hotel_Management_System-React-TS\\\\src\\\\pages\\\\Signin\\\\Signin.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./signin.style.sass\";\nimport { Form, Formik } from \"formik\";\nimport { Stack, useToast } from \"@chakra-ui/react\";\nimport { SubmitButton } from \"formik-chakra-ui\";\nimport { useSigninUserMutation } from \"../../store/api/authAPi\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useAppDispatch } from \"../../store/hook\";\nimport { setUser } from \"../../store/state/authSlice\";\nimport * as Yup from \"yup\";\nimport \"./signin.style.sass\";\nimport InputFieldComponent from \"../../components/fieldComponents/inputField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signin = () => {\n  _s();\n  const dispatch = useAppDispatch();\n  const [email, setEmail] = useState();\n  const toast = useToast();\n  const {\n    state\n  } = useLocation();\n  const navigate = useNavigate();\n  const [signinUser, {\n    data,\n    isLoading,\n    error,\n    isError,\n    isSuccess\n  }] = useSigninUserMutation();\n  console.log(data);\n  console.log(error);\n  if (isError) {\n    toast({\n      title: error.data.message,\n      status: \"error\",\n      duration: 5000\n    });\n  }\n  if (isSuccess) {\n    dispatch(setUser({\n      token: data.token,\n      name: data.name\n    }));\n    navigate(\"/\");\n    localStorage.setItem(\"token\", data.token);\n  }\n  const initialValues = {\n    email: \"\",\n    password: \"\"\n  };\n  const validationSchema = Yup.object({\n    email: Yup.string().email(\"Invalid email address\").required(\"Email address is required\"),\n    password: Yup.string().required(\"Password is required\")\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-image\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"card-heading\",\n          children: [\"Premium Hotel\", /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"Signin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        onSubmit: values => {\n          signinUser({\n            ...values\n          });\n          // console.log(values);\n          // setEmail(values.email);\n        },\n\n        validationSchema: validationSchema,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            boxShadow: \"xl\",\n            borderRadius: \"md\",\n            children: [/*#__PURE__*/_jsxDEV(InputFieldComponent, {\n              className: \"input-field\",\n              name: \"email\",\n              label: \"Email\",\n              type: \"Email\",\n              placeholder: \"Enter Email\\r \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(InputFieldComponent, {\n              className: \"input-field\",\n              name: \"password\",\n              label: \"Password\",\n              placeholder: \"Enter Password\",\n              type: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n              className: \"action\",\n              isLoading: isLoading,\n              children: \"Signin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(Signin, \"gvALYu1MPaRh1HW/WqdcIp8Kx8s=\", false, function () {\n  return [useAppDispatch, useToast, useLocation, useNavigate, useSigninUserMutation];\n});\n_c = Signin;\nexport default Signin;\nvar _c;\n$RefreshReg$(_c, \"Signin\");","map":{"version":3,"names":["React","useState","Form","Formik","Stack","useToast","SubmitButton","useSigninUserMutation","useLocation","useNavigate","useAppDispatch","setUser","Yup","InputFieldComponent","Signin","dispatch","email","setEmail","toast","state","navigate","signinUser","data","isLoading","error","isError","isSuccess","console","log","title","message","status","duration","token","name","localStorage","setItem","initialValues","password","validationSchema","object","string","required","values"],"sources":["C:/Users/DELL/Documents/Hotel Management System/Hotel_Management_System-React-TS/src/pages/Signin/Signin.tsx"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport \"./signin.style.sass\"\r\nimport {Form, Formik, FormikHelpers, FormikValues, useFormik} from \"formik\";\r\nimport {Flex, Grid, Heading, Link, Stack, useToast} from \"@chakra-ui/react\";\r\nimport {InputControl, SubmitButton} from \"formik-chakra-ui\";\r\nimport {useSigninUserMutation} from \"../../store/api/authAPi\";\r\nimport {isError} from \"@tanstack/react-query\";\r\nimport {useLocation, useNavigate} from \"react-router-dom\";\r\nimport {useAppDispatch} from \"../../store/hook\";\r\nimport {setUser} from \"../../store/state/authSlice\"\r\nimport * as Yup from \"yup\";\r\nimport \"./signin.style.sass\";\r\nimport InputFieldComponent from \"../../components/fieldComponents/inputField\";\r\n\r\nconst Signin = () => {\r\n    const dispatch = useAppDispatch();\r\n    const [email, setEmail] = useState<string>();\r\n    const toast = useToast();\r\n    const {state} = useLocation();\r\n    const navigate = useNavigate();\r\n\r\n\r\n    const [signinUser, {data, isLoading, error, isError, isSuccess}] = useSigninUserMutation();\r\n    console.log(data);\r\n    console.log(error);\r\n    if (isError) {\r\n        toast({\r\n            title: (error as any).data.message,\r\n            status: \"error\",\r\n            duration: 5000\r\n        });\r\n    }\r\n\r\n\r\n    if (isSuccess) {\r\n        dispatch(setUser({token: data.token, name: data.name}));\r\n        navigate(\"/\");\r\n        localStorage.setItem(\"token\", data.token);\r\n    }\r\n\r\n    const initialValues = {\r\n        email: \"\",\r\n        password: \"\"\r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n            email: Yup.string()\r\n                .email(\"Invalid email address\")\r\n                .required(\"Email address is required\"),\r\n            password: Yup.string()\r\n                .required(\"Password is required\"),\r\n        }\r\n    )\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"card\">\r\n                <div className=\"card-image\">\r\n                    <h2 className=\"card-heading\">\r\n                        Premium Hotel\r\n                        <small>Signin</small>\r\n                    </h2>\r\n                </div>\r\n                    <Formik\r\n                        initialValues={initialValues}\r\n\r\n                        onSubmit={(values) => {\r\n                            signinUser({ ...values });\r\n                            // console.log(values);\r\n                            // setEmail(values.email);\r\n                        }}\r\n                        validationSchema={validationSchema}\r\n                    >\r\n                        <Form>\r\n                            <Stack boxShadow=\"xl\" borderRadius=\"md\">\r\n                                <InputFieldComponent\r\n                                    className={\"input-field\"}\r\n                                    name=\"email\"\r\n                                    label=\"Email\"\r\n                                    type=\"Email\"\r\n                                    placeholder=\"Enter Email\r\n                                    \"/>\r\n                                <InputFieldComponent\r\n                                    className={\"input-field\"}\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    placeholder={\"Enter Password\"}\r\n                                    type={\"password\"}\r\n                                />\r\n                                {/*<Flex justify=\"flex-end\">*/}\r\n                                {/*    <Text as={Link} to=\"/forgot-password\" color=\"teal\">*/}\r\n                                {/*        Forgot Password*/}\r\n                                {/*    </Text>*/}\r\n                                {/*</Flex>*/}\r\n                                <SubmitButton className=\"action\" isLoading={isLoading}>Signin</SubmitButton>\r\n                            </Stack>\r\n                        </Form>\r\n                    </Formik>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\nexport default Signin;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}