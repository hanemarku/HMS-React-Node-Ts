{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\Hotel Management System\\\\Hotel_Management_System-React-TS\\\\src\\\\components\\\\multiSelection\\\\MultiSelection.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MultiSelection = _ref => {\n  let {\n    entityList,\n    onChange,\n    value\n  } = _ref;\n  // const [selectedEntities, setSelectedEntities] = useState<string[]>([]);\n  //\n  // const handleOptionSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n  //     const selectedOptions = Array.from(event.target.selectedOptions, option => option.value);\n  //     setSelectedEntities(selectedOptions);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      multiple: true,\n      onChange: onChange,\n      value: value,\n      children: entityList.map(entity => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: entity.id,\n        children: entity.name\n      }, entity.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_c = MultiSelection;\nvar _c;\n$RefreshReg$(_c, \"MultiSelection\");","map":{"version":3,"names":["React","MultiSelection","entityList","onChange","value","map","entity","id","name"],"sources":["C:/Users/DELL/Documents/Hotel Management System/Hotel_Management_System-React-TS/src/components/multiSelection/MultiSelection.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\ninterface Entity {\r\n    id: string;\r\n    name: string;\r\n}\r\n\r\ninterface InputProps {\r\n    entityList: {id: string, name: string}[];\r\n    onChange: (event: React.ChangeEvent<HTMLSelectElement>) => void | boolean;\r\n\r\n    value: []\r\n\r\n}\r\n\r\nexport const MultiSelection: React.FC<InputProps> = ({ entityList , onChange, value}) => {\r\n    // const [selectedEntities, setSelectedEntities] = useState<string[]>([]);\r\n    //\r\n    // const handleOptionSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    //     const selectedOptions = Array.from(event.target.selectedOptions, option => option.value);\r\n    //     setSelectedEntities(selectedOptions);\r\n    // };\r\n\r\n    return (\r\n        <div>\r\n            <select multiple={true}  onChange={onChange} value={value}>\r\n                {entityList.map(entity => (\r\n                    <option key={entity.id} value={entity.id}>\r\n                        {entity.name}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAoB,OAAO;AAAC;AAexC,OAAO,MAAMC,cAAoC,GAAG,QAAqC;EAAA,IAApC;IAAEC,UAAU;IAAGC,QAAQ;IAAEC;EAAK,CAAC;EAChF;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACI;IAAA,uBACI;MAAQ,QAAQ,EAAE,IAAK;MAAE,QAAQ,EAAED,QAAS;MAAC,KAAK,EAAEC,KAAM;MAAA,UACrDF,UAAU,CAACG,GAAG,CAACC,MAAM,iBAClB;QAAwB,KAAK,EAAEA,MAAM,CAACC,EAAG;QAAA,UACpCD,MAAM,CAACE;MAAI,GADHF,MAAM,CAACC,EAAE;QAAA;QAAA;QAAA;MAAA,QAGzB;IAAC;MAAA;MAAA;MAAA;IAAA;EACG;IAAA;IAAA;IAAA;EAAA,QACP;AAEd,CAAC;AAAC,KAnBWN,cAAoC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}