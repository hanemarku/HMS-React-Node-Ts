{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\Hotel Management System\\\\Hotel_Management_System-React-TS\\\\src\\\\components\\\\Forms\\\\RoleForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport \"./form.sass\";\nimport TextComp from \"../fieldComponents/textComp\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { useParams } from \"react-router-dom\";\nimport Profile from \"../profile/profile\";\n// import { useHistory } from 'react-router-dom';\n\n// interface Props {\n//     items: Item[];\n//     addItem: typeof addItem;\n//     getItems: typeof getItems;\n//     updateItem: typeof updateItem;\n//     deleteItem: typeof deleteItem;\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  name: \"\",\n  description: \"\"\n};\nconst MyForm = _ref => {\n  _s();\n  let {\n    selectedRoleId,\n    onSave\n  } = _ref;\n  const [state, setState] = useState(initialState);\n  const {\n    name,\n    description\n  } = initialState;\n  useEffect(() => {\n    if (selectedRoleId) {\n      const role = roles.find(role => role.id === selectedRoleId);\n      setState(role ? role.name : '', description ? role.description : '');\n    } else {\n      setState('');\n    }\n  }, [selectedRoleId]);\n\n  // const navigate = useNavigate();\n  const addRole = async data => {\n    console.log(data);\n    const response = await axios.post(\"http://localhost:3300/roles\", data);\n    toast.success(response.data);\n  };\n  const updateRole = async (data, id) => {\n    console.log(data);\n    const response = await axios.put(`http://localhost:3300/roles/${id}`, data);\n    toast.success(response.data);\n  };\n  const getSingleRole = async id => {\n    const response = await axios.get(`http://localhost:3300/roles/${id}`);\n    if (response.status === 200) {\n      toast.success(response.data);\n      setState({\n        ...response.data[0]\n      });\n    }\n  };\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    if (id) {\n      getSingleRole(id);\n    }\n  }, [id]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    // if(name.trim() === \"\" || description.trim() === \"\"){\n    //     alert(\"empty fields\");\n    // toast.error(\"Do not leave blank fields\");\n    // } else{\n    addRole(state);\n\n    // if(!id){\n    //     alert(\"add\");\n    //     addRole(state);\n    // }else{\n    //     updateRole(state, id);\n    // }\n\n    window.location.reload();\n    // navigate(\"/\");\n    // }\n  };\n\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setState({\n      ...state,\n      [name]: value\n    });\n  };\n  const handleChangeTextArea = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setState({\n      ...state,\n      [name]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"div-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: selectedRoleId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextComp, {\n        text: \"Create a new role\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 61\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"name\",\n            id: \"name\",\n            type: \"text\",\n            placeholder: \"Enter name...\",\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 133\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 75\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"textarea\",\n            id: \"description\",\n            name: \"description\",\n            placeholder: \"Description...\",\n            onChange: handleChangeTextArea\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 163\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: selectedRoleId === null ? 'Add Role' : 'Edit Role'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n};\n_s(MyForm, \"kf8czZWQDJI6a1/d2fdbhUTvmWk=\", false, function () {\n  return [useParams];\n});\n_c = MyForm;\nexport default MyForm;\nvar _c;\n$RefreshReg$(_c, \"MyForm\");","map":{"version":3,"names":["React","useEffect","useState","TextComp","axios","toast","useParams","Profile","initialState","name","description","MyForm","selectedRoleId","onSave","state","setState","role","roles","find","id","addRole","data","console","log","response","post","success","updateRole","put","getSingleRole","get","status","handleSubmit","e","preventDefault","window","location","reload","handleInputChange","event","value","target","handleChangeTextArea"],"sources":["C:/Users/DELL/Documents/Hotel Management System/Hotel_Management_System-React-TS/src/components/Forms/RoleForm.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\n\r\nimport \"./form.sass\";\r\n\r\nimport TextComp from \"../fieldComponents/textComp\";\r\nimport { connect } from 'react-redux';\r\nimport { addItem, getItems, updateItem, deleteItem } from \"../../action\";\r\nimport {Item} from \"../../store/item\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {getRoles} from \"@testing-library/react\";\r\nimport Profile from \"../profile/profile\";\r\n// import { useHistory } from 'react-router-dom';\r\n\r\n// interface Props {\r\n//     items: Item[];\r\n//     addItem: typeof addItem;\r\n//     getItems: typeof getItems;\r\n//     updateItem: typeof updateItem;\r\n//     deleteItem: typeof deleteItem;\r\n// }\r\n\r\nconst initialState={\r\n    name: \"\",\r\n    description: \"\"\r\n}\r\n\r\ninterface RoleFormProps {\r\n    selectedRoleId: string | null;\r\n    onSave: () => void;\r\n}\r\n\r\nconst MyForm: React.FC<RoleFormProps> = ({ selectedRoleId , onSave})  => {\r\n\r\n    const [state, setState] = useState(initialState);\r\n    const {name, description} = initialState;\r\n\r\n\r\n    useEffect(() => {\r\n        if (selectedRoleId) {\r\n            const role = roles.find((role) => role.id === selectedRoleId);\r\n            setState(role ? role.name : '', description ? role.description : '');\r\n        } else {\r\n            setState('');\r\n        }\r\n    }, [selectedRoleId]);\r\n\r\n    // const navigate = useNavigate();\r\n    const addRole = async (data: { name: string; description: string; }) => {\r\n        console.log(data);\r\n        const response = await axios.post(\"http://localhost:3300/roles\", data);\r\n        toast.success(response.data);\r\n    }\r\n\r\n    const updateRole = async (data: { name: string; description: string; }, id: string) => {\r\n        console.log(data);\r\n        const response = await axios.put(`http://localhost:3300/roles/${id}`, data);\r\n        toast.success(response.data);\r\n    }\r\n\r\n    const getSingleRole = async (id: any) => {\r\n        const response = await axios.get(`http://localhost:3300/roles/${id}`);\r\n        if(response.status === 200){\r\n            toast.success(response.data);\r\n            setState({...response.data[0]});\r\n        }\r\n    }\r\n\r\n\r\n    const {id} = useParams();\r\n    useEffect(() => {\r\n        if(id){\r\n            getSingleRole(id);\r\n        }\r\n    }, [id])\r\n\r\n\r\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        // if(name.trim() === \"\" || description.trim() === \"\"){\r\n        //     alert(\"empty fields\");\r\n            // toast.error(\"Do not leave blank fields\");\r\n        // } else{\r\n                addRole(state);\r\n\r\n            // if(!id){\r\n            //     alert(\"add\");\r\n            //     addRole(state);\r\n            // }else{\r\n            //     updateRole(state, id);\r\n            // }\r\n\r\n            window.location.reload()\r\n            // navigate(\"/\");\r\n        // }\r\n    };\r\n\r\n    const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const {name, value } = event.target;\r\n        setState({...state, [name]:value})\r\n    }\r\n\r\n    const handleChangeTextArea = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        const {name, value } = event.target;\r\n        setState({...state, [name]:value})\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Profile/>\r\n            <div className={\"div-container\"}>\r\n                <h1>{selectedRoleId}</h1>\r\n                <TextComp text={\"Create a new role\"} />\r\n                <form className={\"form\"}\r\n                      onSubmit={handleSubmit}\r\n                >\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor={\"name\"}>Name</label><br/>\r\n                        <input  name=\"name\" id={\"name\"}  type={\"text\"} placeholder={\"Enter name...\"} onChange={handleInputChange} /><br/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor={\"description\"}>Description</label><br/>\r\n                        <textarea className={\"textarea\"} id={\"description\"} name={\"description\"} placeholder={\"Description...\"} onChange={handleChangeTextArea} /><br/>\r\n                    </div>\r\n                    <input type={\"submit\"} value={selectedRoleId === null ? 'Add Role' : 'Edit Role'}/>\r\n                </form>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default MyForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}