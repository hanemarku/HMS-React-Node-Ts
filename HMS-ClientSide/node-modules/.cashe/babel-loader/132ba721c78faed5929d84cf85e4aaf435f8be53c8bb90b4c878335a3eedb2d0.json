{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\Hotel Management System\\\\Hotel_Management_System-React-TS\\\\src\\\\components\\\\Forms\\\\RoleForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport \"./form.sass\";\nimport TextComp from \"../fieldComponents/textComp\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { useParams } from \"react-router-dom\";\nimport Profile from \"../profile/profile\";\n// import { useHistory } from 'react-router-dom';\n\n// interface Props {\n//     items: Item[];\n//     addItem: typeof addItem;\n//     getItems: typeof getItems;\n//     updateItem: typeof updateItem;\n//     deleteItem: typeof deleteItem;\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  name: \"\",\n  description: \"\"\n};\nconst MyForm = _ref => {\n  _s();\n  let {\n    selectedRoleId,\n    onSave\n  } = _ref;\n  const {\n    name,\n    description\n  } = initialState;\n  const [role, setRole] = useState({\n    name: '',\n    description: ''\n  });\n\n  // const setRole = async () => {\n  //     const response = await axios.put(`http://localhost:3300/roles/${selectedRoleId}`);\n  //     if(response.status === 200){\n  //         setData(response.data);\n  //     }\n  // }\n\n  useEffect(() => {\n    const getRole = async () => {\n      const response = await axios.get(`http://localhost:3300/role/roles/${selectedRoleId}`);\n      if (response.status === 200) {\n        console.log(response.data);\n        setRole(response.data);\n        // setData(response.data);\n      }\n    };\n\n    if (selectedRoleId !== null) {\n      getRole();\n    }\n  }, [selectedRoleId]);\n\n  // useEffect(() => {\n  //     if (selectedRoleId) {\n  //         const role = roles.find((role) => role.id === selectedRoleId);\n  //         setState(role ? role.name : '', description ? role.description : '');\n  //     } else {\n  //         setState('');\n  //     }\n  // }, [selectedRoleId]);\n\n  // const navigate = useNavigate();\n  const addRole = async data => {\n    console.log(data);\n    const response = await axios.post(\"http://localhost:3300/role/roles\", data);\n    toast.success(response.data);\n  };\n  const updateRole = async (data, id) => {\n    console.log(data);\n    const response = await axios.put(`http://localhost:3300/role/roles/${id}`, data);\n    toast.success(response.data);\n  };\n  const getSingleRole = async id => {\n    const response = await axios.get(`http://localhost:3300/role/roles/${id}`);\n    if (response.status === 200) {\n      toast.success(response.data);\n      setRole({\n        ...response.data[0]\n      });\n    }\n  };\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    if (id) {\n      getSingleRole(id);\n    }\n  }, [id]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(role);\n    // onSave(role);\n    if (!role) {\n      alert(\"empty fields\");\n      toast.error(\"Do not leave blank fields\");\n    } else {\n      // console.log(\"name: \" + name);\n      // alert(name);\n      // alert(selectedRoleId);\n      if (!selectedRoleId) {\n        // alert(\"add\");\n        addRole(role);\n      } else {\n        // alert(\"edit\");\n        console.log(role);\n        // alert(selectedRoleId);\n        updateRole(role, selectedRoleId);\n        console.log(role);\n      }\n    }\n    window.location.reload();\n    // navigate(\"/\");\n    // }\n  };\n\n  const handleChangeTextArea = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setRole({\n      ...role,\n      [name]: value\n    });\n  };\n  const handleChange = event => {\n    setRole({\n      ...role,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  // const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n  //     event.preventDefault();\n  //     onSave(role);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"div-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: selectedRoleId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextComp, {\n        text: selectedRoleId === null ? 'Add Role' : 'Edit Role'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 61\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"name\",\n            id: \"name\",\n            type: \"text\",\n            placeholder: \"Enter name...\",\n            value: role.name,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 59\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 75\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"textarea\",\n            id: \"description\",\n            name: \"description\",\n            placeholder: \"Description...\",\n            value: role.description,\n            onChange: handleChangeTextArea\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 69\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: selectedRoleId === null ? 'Add Role' : 'Edit Role'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 9\n  }, this);\n};\n_s(MyForm, \"TMiq2l+jVJhRv8wI0H4ahF03ZiU=\", false, function () {\n  return [useParams];\n});\n_c = MyForm;\nexport default MyForm;\nvar _c;\n$RefreshReg$(_c, \"MyForm\");","map":{"version":3,"names":["React","useEffect","useState","TextComp","axios","toast","useParams","Profile","initialState","name","description","MyForm","selectedRoleId","onSave","role","setRole","getRole","response","get","status","console","log","data","addRole","post","success","updateRole","id","put","getSingleRole","handleSubmit","e","preventDefault","alert","error","window","location","reload","handleChangeTextArea","event","value","target","handleChange"],"sources":["C:/Users/DELL/Documents/Hotel Management System/Hotel_Management_System-React-TS/src/components/Forms/RoleForm.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\n\r\nimport \"./form.sass\";\r\n\r\nimport TextComp from \"../fieldComponents/textComp\";\r\nimport {Item} from \"../../store/item\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {getRoles} from \"@testing-library/react\";\r\nimport Profile from \"../profile/profile\";\r\n// import { useHistory } from 'react-router-dom';\r\n\r\n// interface Props {\r\n//     items: Item[];\r\n//     addItem: typeof addItem;\r\n//     getItems: typeof getItems;\r\n//     updateItem: typeof updateItem;\r\n//     deleteItem: typeof deleteItem;\r\n// }\r\n\r\nconst initialState={\r\n    name: \"\",\r\n    description: \"\"\r\n}\r\n\r\ninterface RoleFormProps {\r\n    selectedRoleId: string | null;\r\n    onSave: () => void;\r\n}\r\n\r\ninterface Entity {\r\n    name: string;\r\n    description: string;\r\n}\r\n\r\n\r\nconst MyForm: React.FC<RoleFormProps> = ({ selectedRoleId , onSave})  => {\r\n\r\n\r\n    const {name, description} = initialState;\r\n    const [role, setRole] = useState({ name: '', description: '' });\r\n\r\n\r\n    // const setRole = async () => {\r\n    //     const response = await axios.put(`http://localhost:3300/roles/${selectedRoleId}`);\r\n    //     if(response.status === 200){\r\n    //         setData(response.data);\r\n    //     }\r\n    // }\r\n\r\n    useEffect(() => {\r\n\r\n        const getRole = async () => {\r\n            const response = await axios.get(`http://localhost:3300/role/roles/${selectedRoleId}`);\r\n            if(response.status === 200){\r\n                console.log(response.data);\r\n                setRole(response.data);\r\n                // setData(response.data);\r\n            }\r\n        }\r\n\r\n        if (selectedRoleId !== null) {\r\n            getRole();\r\n        }\r\n    }, [selectedRoleId]);\r\n\r\n    // useEffect(() => {\r\n    //     if (selectedRoleId) {\r\n    //         const role = roles.find((role) => role.id === selectedRoleId);\r\n    //         setState(role ? role.name : '', description ? role.description : '');\r\n    //     } else {\r\n    //         setState('');\r\n    //     }\r\n    // }, [selectedRoleId]);\r\n\r\n    // const navigate = useNavigate();\r\n    const addRole = async (data: { name: string; description: string; }) => {\r\n        console.log(data);\r\n        const response = await axios.post(\"http://localhost:3300/role/roles\", data);\r\n        toast.success(response.data);\r\n    }\r\n\r\n    const updateRole = async (data: { name: string; description: string; }, id: string | null) => {\r\n        console.log(data);\r\n        const response = await axios.put(`http://localhost:3300/role/roles/${id}`, data);\r\n        toast.success(response.data);\r\n    }\r\n\r\n    const getSingleRole = async (id: string | null) => {\r\n        const response = await axios.get(`http://localhost:3300/role/roles/${id}`);\r\n        if(response.status === 200){\r\n            toast.success(response.data);\r\n            setRole({...response.data[0]});\r\n        }\r\n    }\r\n\r\n\r\n    const {id} = useParams();\r\n    useEffect(() => {\r\n        if(id){\r\n            getSingleRole(id);\r\n        }\r\n    }, [id])\r\n\r\n\r\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n\r\n        console.log(role);\r\n        // onSave(role);\r\n        if(!role){\r\n\r\n            alert(\"empty fields\");\r\n            toast.error(\"Do not leave blank fields\");\r\n        } else{\r\n            // console.log(\"name: \" + name);\r\n            // alert(name);\r\n            // alert(selectedRoleId);\r\n            if(!selectedRoleId){\r\n                // alert(\"add\");\r\n                addRole(role);\r\n            }else{\r\n                // alert(\"edit\");\r\n                console.log(role);\r\n                // alert(selectedRoleId);\r\n                updateRole(role, selectedRoleId);\r\n                console.log(role);\r\n            }\r\n\r\n            }\r\n\r\n            window.location.reload()\r\n            // navigate(\"/\");\r\n        // }\r\n    };\r\n\r\n\r\n    const handleChangeTextArea = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        const {name, value } = event.target;\r\n        setRole({...role, [name]:value})\r\n    };\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setRole({ ...role, [event.target.name]: event.target.value });\r\n    };\r\n\r\n    // const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    //     event.preventDefault();\r\n    //     onSave(role);\r\n    // };\r\n\r\n    return (\r\n        <div>\r\n            <Profile/>\r\n            <div className={\"div-container\"}>\r\n                <h1>{selectedRoleId}</h1>\r\n                <TextComp text={selectedRoleId === null ? 'Add Role' : 'Edit Role'} />\r\n                <form className={\"form\"}\r\n                      onSubmit={handleSubmit}\r\n                >\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor={\"name\"}>Name</label><br/>\r\n                        <input  name=\"name\" id={\"name\"}\r\n                                type={\"text\"}\r\n                                placeholder={\"Enter name...\"}\r\n                                value={role.name}\r\n                                onChange={handleChange} /><br/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor={\"description\"}>Description</label><br/>\r\n                        <textarea className={\"textarea\"}\r\n                                  id={\"description\"}\r\n                                  name={\"description\"}\r\n                                  placeholder={\"Description...\"}\r\n                                  value={role.description}\r\n                                  onChange={handleChangeTextArea} /><br/>\r\n                    </div>\r\n                    <input type={\"submit\"} value={selectedRoleId === null ? 'Add Role' : 'Edit Role'}/>\r\n                </form>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default MyForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}