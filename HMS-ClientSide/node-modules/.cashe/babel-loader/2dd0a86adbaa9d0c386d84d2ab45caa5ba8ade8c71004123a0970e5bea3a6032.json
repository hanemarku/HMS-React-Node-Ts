{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\Hotel Management System\\\\Hotel_Management_System-React-TS\\\\src\\\\components\\\\Forms\\\\RoleForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport \"./form.sass\";\nimport TextComp from \"../fieldComponents/textComp\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { useParams } from \"react-router-dom\";\nimport Input from \"../formComponents/Input\";\nimport TextArea from \"../fieldComponents/textArea\";\nimport { FormComponent } from \"../formComponents/FormComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  name: \"\",\n  description: \"\"\n};\nconst MyForm = _ref => {\n  _s();\n  let {\n    selectedId,\n    onSave\n  } = _ref;\n  const {\n    name,\n    description\n  } = initialState;\n  const [role, setRole] = useState({\n    name: '',\n    description: ''\n  });\n  useEffect(() => {\n    const getRole = async () => {\n      const response = await axios.get(`http://localhost:3300/roles/${selectedId}`);\n      if (response.status === 200) {\n        console.log(response.data);\n        setRole(response.data);\n        // setData(response.data);\n      }\n    };\n\n    if (selectedId !== null) {\n      getRole();\n    }\n  }, [selectedId]);\n  const addRole = async data => {\n    console.log(data);\n    const response = await axios.post(\"http://localhost:3300/roles\", data);\n    toast.success(response.data);\n  };\n  const updateRole = async (data, id) => {\n    console.log(data);\n    const response = await axios.put(`http://localhost:3300/roles/${id}`, data);\n    toast.success(response.data);\n  };\n  const getSingleRole = async id => {\n    const response = await axios.get(`http://localhost:3300/roles/${id}`);\n    if (response.status === 200) {\n      toast.success(response.data);\n      setRole({\n        ...response.data[0]\n      });\n    }\n  };\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    if (id) {\n      getSingleRole(id);\n    }\n  }, [id]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(role);\n    if (!role) {\n      alert(\"empty fields\");\n      toast.error(\"Do not leave blank fields\");\n    } else {\n      if (!selectedId) {\n        addRole(role);\n      } else {\n        console.log(role);\n        updateRole(role, selectedId);\n        console.log(role);\n      }\n    }\n    window.location.reload();\n  };\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setRole({\n      ...role,\n      [name]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"div-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: selectedId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextComp, {\n        text: selectedId === null ? 'Add Role' : 'Edit Role'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormComponent, {\n        onSubmit: handleSubmit,\n        buttonText: selectedId === null ? 'Add Role' : 'Edit Role',\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          className: \"name\",\n          name: \"name\",\n          label: \"Name\",\n          value: role.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n          className: \"textarea\",\n          name: \"description\",\n          label: \"Description\",\n          value: role.description,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n};\n_s(MyForm, \"TMiq2l+jVJhRv8wI0H4ahF03ZiU=\", false, function () {\n  return [useParams];\n});\n_c = MyForm;\nexport default MyForm;\nvar _c;\n$RefreshReg$(_c, \"MyForm\");","map":{"version":3,"names":["React","useEffect","useState","TextComp","axios","toast","useParams","Input","TextArea","FormComponent","initialState","name","description","MyForm","selectedId","onSave","role","setRole","getRole","response","get","status","console","log","data","addRole","post","success","updateRole","id","put","getSingleRole","handleSubmit","e","preventDefault","alert","error","window","location","reload","handleChange","event","value","target"],"sources":["C:/Users/DELL/Documents/Hotel Management System/Hotel_Management_System-React-TS/src/components/Forms/RoleForm.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\n\r\nimport \"./form.sass\";\r\n\r\nimport TextComp from \"../fieldComponents/textComp\";\r\nimport {Item} from \"../../store/item\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {getRoles} from \"@testing-library/react\";\r\nimport Profile from \"../profile/profile\";\r\nimport Input from \"../formComponents/Input\";\r\nimport TextArea from \"../fieldComponents/textArea\";\r\nimport {FormComponent} from \"../formComponents/FormComponent\";\r\nimport {GridItem} from \"@chakra-ui/react\";\r\nimport IconComp from \"../iconComp/IconComp\";\r\nimport {FormProps} from \"../interfaces/FormProps\";\r\n\r\n\r\nconst initialState={\r\n    name: \"\",\r\n    description: \"\"\r\n}\r\n\r\ninterface Entity {\r\n    name: string;\r\n    description: string;\r\n}\r\n\r\n\r\nconst MyForm: React.FC<FormProps> = ({ selectedId , onSave})  => {\r\n\r\n\r\n    const {name, description} = initialState;\r\n    const [role, setRole] = useState({ name: '', description: '' });\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getRole = async () => {\r\n            const response = await axios.get(`http://localhost:3300/roles/${selectedId}`);\r\n            if(response.status === 200){\r\n                console.log(response.data);\r\n                setRole(response.data);\r\n                // setData(response.data);\r\n            }\r\n        }\r\n\r\n        if (selectedId !== null) {\r\n            getRole();\r\n        }\r\n    }, [selectedId]);\r\n\r\n\r\n    const addRole = async (data: { name: string; description: string; }) => {\r\n        console.log(data);\r\n        const response = await axios.post(\"http://localhost:3300/roles\", data);\r\n        toast.success(response.data);\r\n    }\r\n\r\n    const updateRole = async (data: { name: string; description: string; }, id: string | null) => {\r\n        console.log(data);\r\n        const response = await axios.put(`http://localhost:3300/roles/${id}`, data);\r\n        toast.success(response.data);\r\n    }\r\n\r\n    const getSingleRole = async (id: string | null) => {\r\n        const response = await axios.get(`http://localhost:3300/roles/${id}`);\r\n        if(response.status === 200){\r\n            toast.success(response.data);\r\n            setRole({...response.data[0]});\r\n        }\r\n    }\r\n\r\n\r\n    const {id} = useParams();\r\n    useEffect(() => {\r\n        if(id){\r\n            getSingleRole(id);\r\n        }\r\n    }, [id])\r\n\r\n\r\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n\r\n        console.log(role);\r\n        if(!role){\r\n\r\n            alert(\"empty fields\");\r\n            toast.error(\"Do not leave blank fields\");\r\n        } else{\r\n            if(!selectedId){\r\n                addRole(role);\r\n            }else{\r\n                console.log(role);\r\n                updateRole(role, selectedId);\r\n                console.log(role);\r\n            }\r\n            }\r\n            window.location.reload()\r\n    };\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement> | React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        const { name, value } = event.target;\r\n        setRole({ ...role, [name]: value });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className={\"div-container\"}>\r\n                <h1>{selectedId}</h1>\r\n                <TextComp text={selectedId === null ? 'Add Role' : 'Edit Role'} />\r\n                <FormComponent onSubmit={handleSubmit} buttonText={selectedId === null ? 'Add Role' : 'Edit Role'}>\r\n                        <Input className={\"name\"} name=\"name\" label=\"Name\" value={role.name} onChange={handleChange} />\r\n                        <TextArea className={\"textarea\"} name={\"description\"} label={\"Description\"} value={role.description} onChange={handleChange} />\r\n                </FormComponent>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default MyForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}