{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\Hotel Management System\\\\Hotel_Management_System-React-TS\\\\src\\\\components\\\\createRoleForm\\\\createRoleForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Box, Typography, Stack, LinearProgress, Button, Alert, AlertTitle } from \"@mui/material\";\nimport { TitleField } from \"../fieldComponents/titleField\";\nimport { DescriptionField } from \"../fieldComponents/descriptionField\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { sendApiRequest } from \"../../helpers/sendApiRequest\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CreateRoleForm = () => {\n  _s();\n  const [title, setTitle] = useState(undefined);\n  const [description, setDescription] = useState(undefined);\n  const [showSuccess, setShowSuccess] = useState(false);\n  const createRoleMutation = useMutation(data => sendApiRequest('http://localhost:3200/roles', 'POST', data));\n  function createRoleHandler() {\n    if (!title || !description) {\n      return;\n    }\n    const role = {\n      title,\n      description\n    };\n    createRoleMutation.mutate(role);\n  }\n\n  /*\r\n   * Manage Side Effects inside the application\r\n   */\n  useEffect(() => {\n    if (createRoleMutation.isSuccess) {\n      setShowSuccess(true);\n    }\n    const successTimeout = setTimeout(() => {\n      setShowSuccess(false);\n    }, 7000);\n    return () => {\n      clearTimeout(successTimeout);\n    };\n  }, [createRoleMutation.isSuccess]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"flex-start\",\n    width: \"100%\",\n    px: 4,\n    my: 6,\n    children: [/*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"success\",\n      sx: {\n        width: '100%',\n        marginBottom: '16px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(AlertTitle, {\n        children: \"Success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), \"New role has been created successfully\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      mb: 2,\n      component: \"h2\",\n      variant: \"h6\",\n      children: \"Create New Role\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      sx: {\n        width: '100%'\n      },\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(TitleField, {\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DescriptionField, {\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), createRoleMutation.isLoading && /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 50\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: !title || !description,\n        onClick: createRoleHandler,\n        variant: \"contained\",\n        size: \"large\",\n        fullWidth: true,\n        children: \"Create New Role\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateRoleForm, \"W7YXPIDxtvlGjpKEQp37rijqwsg=\", false, function () {\n  return [useMutation];\n});\n_c = CreateRoleForm;\nvar _c;\n$RefreshReg$(_c, \"CreateRoleForm\");","map":{"version":3,"names":["React","useEffect","useState","Box","Typography","Stack","LinearProgress","Button","Alert","AlertTitle","TitleField","DescriptionField","useMutation","sendApiRequest","CreateRoleForm","title","setTitle","undefined","description","setDescription","showSuccess","setShowSuccess","createRoleMutation","data","createRoleHandler","role","mutate","isSuccess","successTimeout","setTimeout","clearTimeout","width","marginBottom","e","target","value","isLoading"],"sources":["C:/Users/DELL/Documents/Hotel Management System/Hotel_Management_System-React-TS/src/components/createRoleForm/createRoleForm.tsx"],"sourcesContent":["import React, {FC, ReactElement, useEffect, useState} from \"react\";\r\nimport { Box, Typography, Stack, LinearProgress, Button, Alert, AlertTitle} from \"@mui/material\";\r\nimport {TitleField} from \"../fieldComponents/titleField\";\r\nimport {DescriptionField} from \"../fieldComponents/descriptionField\";\r\nimport { useMutation } from \"@tanstack/react-query\";\r\nimport {sendApiRequest} from \"../../helpers/sendApiRequest\";\r\nimport {ICreateRole} from \"./ICreateRole\";\r\n\r\nexport const CreateRoleForm: FC = (): ReactElement => {\r\n    const [title, setTitle] = useState<string | undefined>(\r\n        undefined,\r\n    );\r\n    const [description, setDescription] = useState<string | undefined>(\r\n        undefined,\r\n    );\r\n    const [showSuccess, setShowSuccess] =\r\n        useState<boolean>(false);\r\n\r\n    const createRoleMutation = useMutation(\r\n        (data: ICreateRole) =>\r\n            sendApiRequest(\r\n                'http://localhost:3200/roles',\r\n                'POST',\r\n                data,\r\n            ),\r\n    );\r\n\r\n    function createRoleHandler() {\r\n        if (!title || !description) {\r\n            return;\r\n        }\r\n\r\n    const role: ICreateRole = {\r\n        title,\r\n        description,\r\n    };\r\n    createRoleMutation.mutate(role);\r\n}\r\n\r\n/*\r\n * Manage Side Effects inside the application\r\n */\r\nuseEffect(() => {\r\n    if (createRoleMutation.isSuccess) {\r\n        setShowSuccess(true);\r\n    }\r\n\r\n    const successTimeout = setTimeout(() => {\r\n        setShowSuccess(false);\r\n    }, 7000);\r\n\r\n    return () => {\r\n        clearTimeout(successTimeout);\r\n    };\r\n}, [createRoleMutation.isSuccess]);\r\n\r\n\r\n\r\nreturn (\r\n        <Box\r\n            display={\"flex\"}\r\n            flexDirection={\"column\"}\r\n            alignItems={\"flex-start\"}\r\n            width={\"100%\"}\r\n            px={4}\r\n            my={6}\r\n            >\r\n\r\n            <Alert\r\n            severity={\"success\"}\r\n            sx={{ width: '100%', marginBottom: '16px'}}\r\n            >\r\n                <AlertTitle>Success</AlertTitle>\r\n                New role has been created successfully\r\n            </Alert>\r\n\r\n            <Typography mb={2} component={\"h2\"} variant={\"h6\"}>\r\n                Create New Role\r\n            </Typography>\r\n            <Stack sx={{ width: '100%'}} spacing={2}>\r\n                <TitleField\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n                <DescriptionField\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                />\r\n                {/*<DateField/>*/}\r\n                {/*<Stack*/}\r\n                {/*    sx={{ width: '100%'}}*/}\r\n                {/*    direction={\"row\"}*/}\r\n                {/*    spacing={2}*/}\r\n                {/*>*/}\r\n                {/*    <SelectField*/}\r\n                {/*    label={\"Status\"}*/}\r\n                {/*    name={\"status\"}*/}\r\n                {/*    items={[*/}\r\n                {/*        {*/}\r\n                {/*            value: \"option1\",*/}\r\n                {/*            label: \"option1\",*/}\r\n                {/*        },*/}\r\n                {/*        {*/}\r\n                {/*            value: \"option2\",*/}\r\n                {/*            label: \"option2\",*/}\r\n                {/*        },*/}\r\n                {/*    ]}*/}\r\n                {/*    />*/}\r\n                {/*    <SelectField*/}\r\n                {/*        label={\"priority\"}*/}\r\n                {/*        name={\"priority\"}*/}\r\n                {/*        items={[*/}\r\n                {/*            {*/}\r\n                {/*                value: \"priority1\",*/}\r\n                {/*                label: \"priority1\",*/}\r\n                {/*            },*/}\r\n                {/*            {*/}\r\n                {/*                value: \"priority2\",*/}\r\n                {/*                label: \"priority2\",*/}\r\n                {/*            },*/}\r\n                {/*        ]}/>*/}\r\n\r\n                {/*</Stack>*/}\r\n                {createRoleMutation.isLoading && <LinearProgress />}\r\n\r\n                <Button\r\n                    disabled={\r\n                        !title ||\r\n                        !description\r\n                    }\r\n                    onClick={createRoleHandler}\r\n                    variant=\"contained\"\r\n                    size=\"large\"\r\n                    fullWidth\r\n                >\r\n                    Create New Role\r\n                </Button>\r\n            </Stack>\r\n        </Box>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}